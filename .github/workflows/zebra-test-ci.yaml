# CI Workflow to test tx-tool against a locally built Zebra node
# This workflow clones the zebra repo at a specific branch, builds the Zebra Docker image, and tests tx-tool against it.
# The workflow ensures tx-tool works correctly by spinning up a Zebra container
# and running the tx-tool from the current branch against it in a Docker network.
# Triggers: push to main, pull requests, and manual runs via workflow_dispatch.
# Please note that the selected Zebra branch should be a branch containing the testnet-single-node-deploy directory with a "dockerfile" and "regtest-config.toml" file in it.

name: Check tx-tool against Zebra

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout tx-tool code
        uses: actions/checkout@v3
        with:
          path: tx-tool

      - name: Checkout Zebra code
        uses: actions/checkout@v3
        with:
          repository: QED-it/zebra
          ref: arseni-adjust-dockerfiles # ${{ vars.ZEBRA_BRANCH_TO_TEST || 'zsa-integration-demo' }} # The branch in Zebra we want to test against
          path: zebra

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up Docker cache
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: zebra-cache-${{ runner.os }}-${{ hashFiles('zebra/testnet-single-node-deploy/dockerfile') }}
          restore-keys: |
            zebra-cache-${{ runner.os }}-
            zebra-cache-

      - name: Build Zebra Node
        uses: docker/build-push-action@v4
        with:
          context: zebra
          file: zebra/testnet-single-node-deploy/dockerfile
          tags: zebra-node:local
          push: false
          load: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max

      - name: Run Zebra Node container
        run: |
          docker run -d --name zebra-node -p 18232:18232 zebra-node:local
          # Wait for the node to start up
          echo "Waiting for Zebra node to initialize..."
          sleep 15
          echo "Finished waiting for Zebra node..."

      - name: Build tx-tool
        uses: docker/build-push-action@v4
        with:
          context: tx-tool
          file: tx-tool/Dockerfile
          tags: zcash-tx-tool:local
          push: false
          load: true

      - name: Run tx-tool for test-orchard-zsa and verify success
        run: |
          docker run --network zcash-net \
            -e ZCASH_NODE_ADDRESS=zebra-node \
            -e ZCASH_NODE_PORT=18232 \
            -e ZCASH_NODE_PROTOCOL=http \
            -e RUST_BACKTRACE=1 \
            --name zcash-tx-tool \
            zcash-tx-tool:local test-orchard-zsa

          EXIT_CODE=$(docker inspect zcash-tx-tool --format='{{.State.ExitCode}}')
          docker rm zcash-tx-tool

          if [ $EXIT_CODE -ne 0 ]; then
            docker logs --since 5m zebra-node
            exit 1
          fi

      - name: Run tx-tool for test-three-party and verify success
        run: |
          docker run --network zcash-net \
            -e ZCASH_NODE_ADDRESS=zebra-node \
            -e ZCASH_NODE_PORT=18232 \
            -e ZCASH_NODE_PROTOCOL=http \
            -e RUST_BACKTRACE=1 \
            --name zcash-tx-tool-2 \
            zcash-tx-tool:local test-three-party

          EXIT_CODE=$(docker inspect zcash-tx-tool-2 --format='{{.State.ExitCode}}')
          docker rm zcash-tx-tool-2

          if [ $EXIT_CODE -ne 0 ]; then
            docker logs --since 5m zebra-node
            exit 1
          fi

      - name: Cleanup
        if: always()
        run: |
          docker stop zebra-node || true
          docker rm zebra-node || true
          docker network rm zcash-net || true
